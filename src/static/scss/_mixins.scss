@import 'mixins/__lists';
@import 'mixins/animations';
@import 'mixins/background';
@import 'mixins/border_radius';
@import 'mixins/box_shadow';
@import 'mixins/box_sizing';
@import 'mixins/clearfix';
@import 'mixins/columns';
@import 'mixins/image_rendering';
@import 'mixins/filter';
@import 'mixins/flex';
@import 'mixins/font_size';
@import 'mixins/linear_gradient';
@import 'mixins/opacity';
@import 'mixins/padding';
@import 'mixins/placeholder';
@import 'mixins/reset';
@import 'mixins/transition';
@import 'mixins/transform';
@import 'mixins/valign';
@import 'mixins/unselectable';
@import 'conf';

//===================================================
//  Алиас для "@media screen and (min-width: $from) and (max-width: $to)"
//
//  Пример:
//    // красный фон при ширине окна от 768px включительно.
//    div {
//      @include media_interval($media768, 0) {
//        background: red;
//      }
//    }
//
//
//  Также можно использовать переменные-списки:
//    $desktop: ($media768, $media1024);
//    ...
//    @include media_interval($desktop) { ... }
//
//===================================================
@mixin media_interval($args...) {
  $from: 0;
  $to: 0;
  $line: "";

  $first: nth($args, 1);
  @if (type_of($first) == list) {
    // интервал в виде списка
    $from: nth($first, 1);
    $to: nth($first, 2);
  } @else {
    $from: nth($args, 1);
    $to: nth($args, 2);
  }

  @if $from > 0 {
    $line: "(min-width: #{$from})";
  }

  @if $to > 0 {
    @if $from > 0 {
      $line: "#{$line} and (max-width: #{$to - 1px})";
    } @else {
      $line: "(max-width: #{$to - 1px})";
    }
  }

  @media screen and #{$line} {
    @content;
  }
}

//===================================================
//	Установка стилей CSS-свойства $property
//  на основании SCSS-карты.
//
//  Пример:
//    $width: (
//      ($media768, $media1024): 80px,
//      (0, $media768): 60px,
//    );
//    ...
//    @include media_map(width, $width);
//===================================================
@mixin media_map($property, $values) {
  $type: type_of($values);
  @if ($type == map) {
    @each $media, $value in $values {
      @include media_interval($media...) {
        #{$property}: #{$value};
      }
    }
  } @else {
    #{$property}: #{$values};
  }
}

//=========================================
//  Вертикальное и горизонтальное центрирование
//  картинки + растягивание её на весь родительский блок,
//  если её стандартного размера недостаточно.
//
//  Параметр $minSize может помочь с ошибками округления.
//  Для этого нужно указать значение, чуть болше 100%.
//  Например:
//    @include centrizeImage($minSize: 100.5%);
//=========================================
@mixin centrizeImage($zIndex: 1, $minSize: 100%) {
  position: absolute;
  left: 50%;
  top: 50%;
  min-width: #{$minSize};
  min-height: #{$minSize};
  max-width: none;
  z-index: #{$zIndex};
  @include transform(translate(-50%, -50%));
}


//=========================================
//  Размеры шрифта
//=========================================
@mixin fontsize_default() {
  @include font-size(16px, 24px);
  @include media_interval(0, $media768) {
    @include font-size(14px);
  }
}

@mixin fontsize_h1() {
  @include font-size(40px, 42px);
  @include media_interval(0, $media768) {
    @include font-size(28px);
  }
}

//=========================================
//  Шрифты
//=========================================
@mixin font_default() {
  font-family: Arial, Helvetica, sans-serif;
}
