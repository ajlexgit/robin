@import 'mixins/animations';
@import 'mixins/border_radius';
@import 'mixins/box_sizing';
@import 'mixins/clearfix';
@import 'mixins/font_size';
@import 'mixins/reset';
@import 'mixins/grayscale';
@import 'mixins/linear_gradient';
@import 'mixins/opacity';
@import 'mixins/transition';
@import 'mixins/transform';
@import 'mixins/valign';
@import 'mixins/unselectable';

// Точки для media-queries
$desktop: 1200px;
$tablet_wide: 1024px;
$tablet: 768px;
$mobile_wide: 640px;

// Размеры окна
@mixin media($args...) {
  @function media-value($value) {
    $conversion-map: (
            wide: "screen and (min-width: #{$desktop})",
            desktop: "screen and (min-width: #{$tablet_wide}) and (max-width: #{$desktop - 1px})",
            tablet: "screen and (min-width: #{$tablet}) and (max-width: #{$tablet_wide - 1px})",
            mobile: "screen and (max-width: #{$tablet - 1px})",
            mobile_mini: "screen and (max-width: #{$mobile_wide - 1px})"
    );

    @if map-has-key($conversion-map, $value) {
      @return map-get($conversion-map, $value);
    } @else {
      @error "Not found media `#{$value}`";
    }
  }

  @each $name in $args {
    @media #{media-value($name)} {
      @content;
    }
  }
}


// Боковые границы сетки
$grid_padding_wide: 90px;
$grid_padding: 50px;
$grid_padding_mobile: 16px;

@mixin grid-paddings {
  padding-left: $grid_padding_wide;
  padding-right: $grid_padding_wide;
  @include box_sizing(border-box);
  @include media(tablet, desktop) {
    padding-left: $grid_padding;
    padding-right: $grid_padding;
  }
  @include media(mobile) {
    padding-left: $grid_padding_mobile;
    padding-right: $grid_padding_mobile;
  }
}

// Боковые границы каждого столбца
$grid_col_padding: 14px;

// Максимальная ширина
$grid_max_width: 1400px;

// Стили текста по умолчанию
@mixin default_font() {
  font-family: Arial, Helvetica, sans-serif;
  line-height: 1.4;
  @include font-size(12px);
}

// Текст, уходящий в тень.
@mixin long_text($shadow_color: black, $shadow_width: 1.6em, $shadow_height: 100%) {
  position: relative;
  overflow: hidden;
  word-wrap: break-word;

  &:after {
    content: '';
    position: absolute;
    @include linear-gradient(to left, $shadow_color 0, rgba(0, 0, 0, 0) 100%);
    height: $shadow_height;
    width: $shadow_width;
    bottom: 0;
    right: 0;
  }
}