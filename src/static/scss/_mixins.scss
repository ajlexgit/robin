@import 'mixins/animations';
@import 'mixins/background';
@import 'mixins/border_radius';
@import 'mixins/box_shadow';
@import 'mixins/box_sizing';
@import 'mixins/clearfix';
@import 'mixins/columns';
@import 'mixins/filter';
@import 'mixins/flex';
@import 'mixins/font_size';
@import 'mixins/linear_gradient';
@import 'mixins/opacity';
@import 'mixins/padding';
@import 'mixins/placeholder';
@import 'mixins/reset';
@import 'mixins/transition';
@import 'mixins/transform';
@import 'mixins/valign';
@import 'mixins/unselectable';
@import 'conf';


// Алиас для "@media screen and (min-width: $from) and (max-width: $to)"
@mixin media_interval($from, $to) {
  $line: "";

  @if $from > 0 {
    $line: "(min-width: #{$from})";
  }

  @if $to > 0 {
    @if $from > 0 {
      $line: "#{$line} and (max-width: #{$to - 1px})";
    } @else {
      $line: "(max-width: #{$to - 1px})";
    }
  }

  @media screen and #{$line} {
    @content;
  }
}


//===================================================
//	Установка стилей CSS-свойства $property
//  на основании карты вида:
//
//    (
//      ($media768, $media1024): 80px,
//      (0, $media768): 60px,
//    )
//===================================================
@mixin media_map($property, $values) {
	$type: type_of($values);
	@if ($type == map) {
		@each $media, $value in $values {
			@include media_interval($media...) {
				#{$property}: #{$value};
			}
		}
	} @else {
		#{$property}: #{$values};
	}
}



@mixin fontsize_default() {
  @include font-size(16px);
  @include media_interval(0, $media768) {
    @include font-size(14px);
  }
}

@mixin font_default() {
  letter-spacing: 0.1em;
  font-family: Arial, Helvetica, sans-serif;
}
